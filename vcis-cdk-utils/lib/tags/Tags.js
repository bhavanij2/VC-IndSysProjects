"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cdk = require("@aws-cdk/cdk");
const InputParameterHolder_1 = require("../holder/InputParameterHolder");
class Tags {
    static setup() {
        this.owner = new cdk.Tag('mon:owner', InputParameterHolder_1.InputParameterHolder.get(this.tagKey).owner);
        this.costCenter = new cdk.Tag('mon:cost-center', InputParameterHolder_1.InputParameterHolder.get(this.tagKey).costCenter);
        this.project = new cdk.Tag('mon:project', InputParameterHolder_1.InputParameterHolder.get(this.tagKey).project);
        this.env = new cdk.Tag('mon:env', InputParameterHolder_1.InputParameterHolder.get(this.tagKey).env);
        this.regulated = new cdk.Tag('mon:regulated', InputParameterHolder_1.InputParameterHolder.get(this.tagKey).regulated);
        this.dataClassification = new cdk.Tag('mon:data-classification', InputParameterHolder_1.InputParameterHolder.get(this.tagKey).dataClassification);
    }
    static get OWNER() {
        return this.owner;
    }
    static get COST_CENTER() {
        return this.costCenter;
    }
    static get PROJECT() {
        return this.project;
    }
    static get ENV() {
        return this.env;
    }
    static get REGULATED() {
        return this.regulated;
    }
    static get DATA_CLASSIFICATION() {
        return this.dataClassification;
    }
}
Tags.tagsParameterStorePaths = {
    "owner": "ssm:/vcis/{ENV}/infra/tags/owner:1",
    "costCenter": "ssm:/vcis/{ENV}/infra/tags/costCenter:1",
    "project": "ssm:/vcis/{ENV}/infra/tags/project:1",
    "env": "ssm:/vcis/{ENV}/infra/tags/env:1",
    "regulated": "ssm:/vcis/{ENV}/infra/tags/regulated:1",
    "dataClassification": "ssm:/vcis/{ENV}/infra/tags/dataClassification:1"
};
Tags.tagKey = 'vcis_tags';
exports.Tags = Tags;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFncy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlRhZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxvQ0FBcUM7QUFDckMseUVBQXNFO0FBRXRFLE1BQWEsSUFBSTtJQW9CYixNQUFNLENBQUMsS0FBSztRQUNSLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSwyQ0FBb0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25GLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLDJDQUFvQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbkcsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLDJDQUFvQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDekYsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLDJDQUFvQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLDJDQUFvQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDL0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRSwyQ0FBb0IsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDL0gsQ0FBQztJQUVELE1BQU0sS0FBSyxLQUFLO1FBQ1osT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxNQUFNLEtBQUssV0FBVztRQUNsQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU0sS0FBSyxPQUFPO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxNQUFNLEtBQUssR0FBRztRQUNWLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNwQixDQUFDO0lBRUQsTUFBTSxLQUFLLFNBQVM7UUFDaEIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7SUFFRCxNQUFNLEtBQUssbUJBQW1CO1FBQzFCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDO0lBQ25DLENBQUM7O0FBakRNLDRCQUF1QixHQUFHO0lBQ3pCLE9BQU8sRUFBRSxvQ0FBb0M7SUFDN0MsWUFBWSxFQUFFLHlDQUF5QztJQUN2RCxTQUFTLEVBQUUsc0NBQXNDO0lBQ2pELEtBQUssRUFBRSxrQ0FBa0M7SUFDekMsV0FBVyxFQUFFLHdDQUF3QztJQUNyRCxvQkFBb0IsRUFBRSxpREFBaUQ7Q0FDOUUsQ0FBQztBQUVLLFdBQU0sR0FBRyxXQUFXLENBQUM7QUFYaEMsb0JBb0RDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNkayA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2NkaycpO1xuaW1wb3J0IHsgSW5wdXRQYXJhbWV0ZXJIb2xkZXIgfSBmcm9tICcuLi9ob2xkZXIvSW5wdXRQYXJhbWV0ZXJIb2xkZXInO1xuXG5leHBvcnQgY2xhc3MgVGFncyB7XG5cbiAgICBzdGF0aWMgdGFnc1BhcmFtZXRlclN0b3JlUGF0aHMgPSB7XG4gICAgICAgICAgICBcIm93bmVyXCI6IFwic3NtOi92Y2lzL3tFTlZ9L2luZnJhL3RhZ3Mvb3duZXI6MVwiLFxuICAgICAgICAgICAgXCJjb3N0Q2VudGVyXCI6IFwic3NtOi92Y2lzL3tFTlZ9L2luZnJhL3RhZ3MvY29zdENlbnRlcjoxXCIsXG4gICAgICAgICAgICBcInByb2plY3RcIjogXCJzc206L3ZjaXMve0VOVn0vaW5mcmEvdGFncy9wcm9qZWN0OjFcIixcbiAgICAgICAgICAgIFwiZW52XCI6IFwic3NtOi92Y2lzL3tFTlZ9L2luZnJhL3RhZ3MvZW52OjFcIixcbiAgICAgICAgICAgIFwicmVndWxhdGVkXCI6IFwic3NtOi92Y2lzL3tFTlZ9L2luZnJhL3RhZ3MvcmVndWxhdGVkOjFcIixcbiAgICAgICAgICAgIFwiZGF0YUNsYXNzaWZpY2F0aW9uXCI6IFwic3NtOi92Y2lzL3tFTlZ9L2luZnJhL3RhZ3MvZGF0YUNsYXNzaWZpY2F0aW9uOjFcIlxuICAgIH07XG5cbiAgICBzdGF0aWMgdGFnS2V5ID0gJ3ZjaXNfdGFncyc7XG4gICAgXG4gICAgcHJpdmF0ZSBzdGF0aWMgb3duZXI6IGNkay5UYWc7XG4gICAgcHJpdmF0ZSBzdGF0aWMgY29zdENlbnRlcjogY2RrLlRhZztcbiAgICBwcml2YXRlIHN0YXRpYyBwcm9qZWN0OiBjZGsuVGFnO1xuICAgIHByaXZhdGUgc3RhdGljIGVudjogY2RrLlRhZztcbiAgICBwcml2YXRlIHN0YXRpYyByZWd1bGF0ZWQ6IGNkay5UYWc7XG4gICAgcHJpdmF0ZSBzdGF0aWMgZGF0YUNsYXNzaWZpY2F0aW9uOiBjZGsuVGFnO1xuXG4gICAgc3RhdGljIHNldHVwKCl7XG4gICAgICAgIHRoaXMub3duZXIgPSBuZXcgY2RrLlRhZygnbW9uOm93bmVyJywgSW5wdXRQYXJhbWV0ZXJIb2xkZXIuZ2V0KHRoaXMudGFnS2V5KS5vd25lcik7XG4gICAgICAgIHRoaXMuY29zdENlbnRlciA9IG5ldyBjZGsuVGFnKCdtb246Y29zdC1jZW50ZXInLCBJbnB1dFBhcmFtZXRlckhvbGRlci5nZXQodGhpcy50YWdLZXkpLmNvc3RDZW50ZXIpO1xuICAgICAgICB0aGlzLnByb2plY3QgPSBuZXcgY2RrLlRhZygnbW9uOnByb2plY3QnLCBJbnB1dFBhcmFtZXRlckhvbGRlci5nZXQodGhpcy50YWdLZXkpLnByb2plY3QpO1xuICAgICAgICB0aGlzLmVudiA9IG5ldyBjZGsuVGFnKCdtb246ZW52JywgSW5wdXRQYXJhbWV0ZXJIb2xkZXIuZ2V0KHRoaXMudGFnS2V5KS5lbnYpO1xuICAgICAgICB0aGlzLnJlZ3VsYXRlZCA9IG5ldyBjZGsuVGFnKCdtb246cmVndWxhdGVkJywgSW5wdXRQYXJhbWV0ZXJIb2xkZXIuZ2V0KHRoaXMudGFnS2V5KS5yZWd1bGF0ZWQpO1xuICAgICAgICB0aGlzLmRhdGFDbGFzc2lmaWNhdGlvbiA9IG5ldyBjZGsuVGFnKCdtb246ZGF0YS1jbGFzc2lmaWNhdGlvbicsIElucHV0UGFyYW1ldGVySG9sZGVyLmdldCh0aGlzLnRhZ0tleSkuZGF0YUNsYXNzaWZpY2F0aW9uKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IE9XTkVSKCk6IGNkay5UYWcge1xuICAgICAgICByZXR1cm4gdGhpcy5vd25lcjtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IENPU1RfQ0VOVEVSKCk6IGNkay5UYWcge1xuICAgICAgICByZXR1cm4gdGhpcy5jb3N0Q2VudGVyO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgUFJPSkVDVCgpOiBjZGsuVGFnIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvamVjdDtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IEVOVigpOiBjZGsuVGFnIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW52O1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgUkVHVUxBVEVEKCk6IGNkay5UYWcge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWd1bGF0ZWQ7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBEQVRBX0NMQVNTSUZJQ0FUSU9OKCk6IGNkay5UYWcge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhQ2xhc3NpZmljYXRpb247XG4gICAgfVxufVxuIl19