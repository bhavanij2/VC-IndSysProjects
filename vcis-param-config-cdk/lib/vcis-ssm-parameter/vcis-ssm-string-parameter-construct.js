"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_ssm_1 = require("@aws-cdk/aws-ssm");
const vcis_cdk_utils_1 = require("@monsantoit/vcis-cdk-utils");
class VcisSsmStringParameterConstruct {
    constructor(scope, id, props) {
        const ssmParam = new aws_ssm_1.StringParameter(scope, id, {
            description: props.description,
            name: props.name,
            stringValue: props.stringValue
        });
        this.applyTagsToCfnResource(ssmParam.node);
    }
    applyTagsToCfnResource(node) {
        const cfResource = node.children.find(child => child !== undefined);
        cfResource.addPropertyOverride('Tags', {
            "mon:owner": vcis_cdk_utils_1.InputParameterHolder.get('tags').owner,
            "mon:cost-center": vcis_cdk_utils_1.InputParameterHolder.get('tags').costCenter,
            "mon:project": vcis_cdk_utils_1.InputParameterHolder.get('tags').project,
            "mon:env": vcis_cdk_utils_1.InputParameterHolder.get('tags').environment,
            "mon:regulated": vcis_cdk_utils_1.InputParameterHolder.get('tags').regulated,
            "mon:data-classification": vcis_cdk_utils_1.InputParameterHolder.get('tags').dataClassification,
        });
    }
}
exports.VcisSsmStringParameterConstruct = VcisSsmStringParameterConstruct;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmNpcy1zc20tc3RyaW5nLXBhcmFtZXRlci1jb25zdHJ1Y3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ2Y2lzLXNzbS1zdHJpbmctcGFyYW1ldGVyLWNvbnN0cnVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhDQUFtRDtBQUVuRCwrREFBa0U7QUFPbEUsTUFBYSwrQkFBK0I7SUFFeEMsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxLQUFrQztRQUN4RSxNQUFNLFFBQVEsR0FBRyxJQUFJLHlCQUFlLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRTtZQUM1QyxXQUFXLEVBQUUsS0FBSyxDQUFDLFdBQVc7WUFDOUIsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJO1lBQ2hCLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztTQUNqQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsc0JBQXNCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFTyxzQkFBc0IsQ0FBQyxJQUFtQjtRQUM5QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQW9CLEtBQUssU0FBUyxDQUFnQixDQUFDO1FBQ2xHLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLEVBQ2pDO1lBQ0ksV0FBVyxFQUFFLHFDQUFvQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLO1lBQ25ELGlCQUFpQixFQUFFLHFDQUFvQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxVQUFVO1lBQzlELGFBQWEsRUFBRSxxQ0FBb0IsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTztZQUN2RCxTQUFTLEVBQUUscUNBQW9CLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVc7WUFDdkQsZUFBZSxFQUFFLHFDQUFvQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTO1lBQzNELHlCQUF5QixFQUFFLHFDQUFvQixDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxrQkFBa0I7U0FDakYsQ0FDSixDQUFDO0lBQ04sQ0FBQztDQUNKO0FBeEJELDBFQXdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0cmluZ1BhcmFtZXRlciB9IGZyb20gXCJAYXdzLWNkay9hd3Mtc3NtXCI7XG5pbXBvcnQgeyBDZm5SZXNvdXJjZSwgQ29uc3RydWN0LCBDb25zdHJ1Y3ROb2RlIH0gZnJvbSBcIkBhd3MtY2RrL2Nka1wiO1xuaW1wb3J0IHsgSW5wdXRQYXJhbWV0ZXJIb2xkZXIgfSBmcm9tIFwiQG1vbnNhbnRvaXQvdmNpcy1jZGstdXRpbHNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBWY2lzU3NtU3RyaW5nUGFyYW1ldGVyUHJvcHMge1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgbmFtZTogc3RyaW5nLFxuICAgIHN0cmluZ1ZhbHVlOiBzdHJpbmdcbn1cbmV4cG9ydCBjbGFzcyBWY2lzU3NtU3RyaW5nUGFyYW1ldGVyQ29uc3RydWN0IHtcblxuICAgIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBWY2lzU3NtU3RyaW5nUGFyYW1ldGVyUHJvcHMpIHtcbiAgICAgICAgY29uc3Qgc3NtUGFyYW0gPSBuZXcgU3RyaW5nUGFyYW1ldGVyKHNjb3BlLCBpZCwge1xuICAgICAgICAgICAgZGVzY3JpcHRpb246IHByb3BzLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgbmFtZTogcHJvcHMubmFtZSxcbiAgICAgICAgICAgIHN0cmluZ1ZhbHVlOiBwcm9wcy5zdHJpbmdWYWx1ZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5hcHBseVRhZ3NUb0NmblJlc291cmNlKHNzbVBhcmFtLm5vZGUpO1xuICAgIH1cblxuICAgIHByaXZhdGUgYXBwbHlUYWdzVG9DZm5SZXNvdXJjZShub2RlOiBDb25zdHJ1Y3ROb2RlKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGNmUmVzb3VyY2UgPSBub2RlLmNoaWxkcmVuLmZpbmQoY2hpbGQgPT4gY2hpbGQgYXMgQ2ZuUmVzb3VyY2UgIT09IHVuZGVmaW5lZCkgYXMgQ2ZuUmVzb3VyY2U7XG4gICAgICAgIGNmUmVzb3VyY2UuYWRkUHJvcGVydHlPdmVycmlkZSgnVGFncycsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgXCJtb246b3duZXJcIjogSW5wdXRQYXJhbWV0ZXJIb2xkZXIuZ2V0KCd0YWdzJykub3duZXIsXG4gICAgICAgICAgICAgICAgXCJtb246Y29zdC1jZW50ZXJcIjogSW5wdXRQYXJhbWV0ZXJIb2xkZXIuZ2V0KCd0YWdzJykuY29zdENlbnRlcixcbiAgICAgICAgICAgICAgICBcIm1vbjpwcm9qZWN0XCI6IElucHV0UGFyYW1ldGVySG9sZGVyLmdldCgndGFncycpLnByb2plY3QsXG4gICAgICAgICAgICAgICAgXCJtb246ZW52XCI6IElucHV0UGFyYW1ldGVySG9sZGVyLmdldCgndGFncycpLmVudmlyb25tZW50LFxuICAgICAgICAgICAgICAgIFwibW9uOnJlZ3VsYXRlZFwiOiBJbnB1dFBhcmFtZXRlckhvbGRlci5nZXQoJ3RhZ3MnKS5yZWd1bGF0ZWQsXG4gICAgICAgICAgICAgICAgXCJtb246ZGF0YS1jbGFzc2lmaWNhdGlvblwiOiBJbnB1dFBhcmFtZXRlckhvbGRlci5nZXQoJ3RhZ3MnKS5kYXRhQ2xhc3NpZmljYXRpb24sXG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgfVxufSJdfQ==