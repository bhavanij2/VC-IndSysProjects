"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const aws_iam_1 = require("@aws-cdk/aws-iam");
const CloudWatchBasicLoggingPolicy_1 = require("../policies/cloud-watch/CloudWatchBasicLoggingPolicy");
const Resources_1 = require("../model/Resources");
const LambdaInvokePolicy_1 = require("../policies/lambda/LambdaInvokePolicy");
const SqsReceiveMessagePolicy_1 = require("../policies/sqs/SqsReceiveMessagePolicy");
const SqsProduceMessagePolicy_1 = require("../policies/sqs/SqsProduceMessagePolicy");
const KinesisProduceMessagePolicy_1 = require("../policies/kinesis/KinesisProduceMessagePolicy");
const KinesisReceiveMessagePolicy_1 = require("../policies/kinesis/KinesisReceiveMessagePolicy");
const SnsPublishPolicy_1 = require("../policies/sns/SnsPublishPolicy");
const S3ObjectCRUDPolicy_1 = require("../policies/s3/S3ObjectCRUDPolicy");
const KmsDecryptPolicy_1 = require("../policies/kms/KmsDecryptPolicy");
const SecretsManagerReadValuePolicy_1 = require("../policies/secret-manager/SecretsManagerReadValuePolicy");
const ManagedPolicies_1 = require("../policies/ManagedPolicies");
const ServicePrincipals_1 = require("./ServicePrincipals");
const vcis_cdk_utils_1 = require("@monsantoit/vcis-cdk-utils");
class LambdaRole {
    static create(stack) {
        const lambdaRole = new aws_iam_1.Role(stack, Resources_1.Resources.LAMBDA_ROLE, {
            assumedBy: new aws_iam_1.ServicePrincipal(ServicePrincipals_1.ServicePrincipals.LAMBDA),
            roleName: vcis_cdk_utils_1.NamingConvention.apply(Resources_1.Resources.LAMBDA_ROLE)
        });
        lambdaRole.attachManagedPolicy(ManagedPolicies_1.ManagedPolicies.XRAY_WRITE_ONLY_ACCESS);
        lambdaRole.attachManagedPolicy(ManagedPolicies_1.ManagedPolicies.APIGW_INVOKE_FULL_ACCESS);
        lambdaRole.attachManagedPolicy(ManagedPolicies_1.ManagedPolicies.LAMBDA_VPC_EXECUTION);
        lambdaRole.attachInlinePolicy(CloudWatchBasicLoggingPolicy_1.CloudWatchBasicLoggingPolicy.get(stack));
        lambdaRole.attachInlinePolicy(LambdaInvokePolicy_1.LambdaInvokePolicy.get(stack));
        lambdaRole.attachInlinePolicy(SqsReceiveMessagePolicy_1.SqsReceiveMessagePolicy.get(stack));
        lambdaRole.attachInlinePolicy(SqsProduceMessagePolicy_1.SqsProduceMessagePolicy.get(stack));
        lambdaRole.attachInlinePolicy(KinesisProduceMessagePolicy_1.KinesisProduceMessagePolicy.get(stack));
        lambdaRole.attachInlinePolicy(KinesisReceiveMessagePolicy_1.KinesisReceiveMessagePolicy.get(stack));
        lambdaRole.attachInlinePolicy(SnsPublishPolicy_1.SnsPublishPolicy.get(stack));
        lambdaRole.attachInlinePolicy(S3ObjectCRUDPolicy_1.S3ObjectCRUDPolicy.get(stack));
        lambdaRole.attachInlinePolicy(KmsDecryptPolicy_1.KmsDecryptPolicy.get(stack));
        lambdaRole.attachInlinePolicy(SecretsManagerReadValuePolicy_1.SecretsManagerReadValuePolicy.get(stack));
        return lambdaRole;
    }
}
exports.LambdaRole = LambdaRole;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGFtYmRhUm9sZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkxhbWJkYVJvbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSw4Q0FBd0Q7QUFDeEQsdUdBQWtHO0FBQ2xHLGtEQUE2QztBQUM3Qyw4RUFBeUU7QUFDekUscUZBQWdGO0FBQ2hGLHFGQUFnRjtBQUNoRixpR0FBNEY7QUFDNUYsaUdBQTRGO0FBQzVGLHVFQUFrRTtBQUNsRSwwRUFBcUU7QUFDckUsdUVBQWtFO0FBQ2xFLDRHQUF1RztBQUN2RyxpRUFBNEQ7QUFDNUQsMkRBQXNEO0FBQ3RELCtEQUE0RDtBQUc1RCxNQUFhLFVBQVU7SUFFbkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFnQjtRQUUxQixNQUFNLFVBQVUsR0FBRyxJQUFJLGNBQUksQ0FBQyxLQUFLLEVBQUUscUJBQVMsQ0FBQyxXQUFXLEVBQUU7WUFDdEQsU0FBUyxFQUFFLElBQUksMEJBQWdCLENBQUMscUNBQWlCLENBQUMsTUFBTSxDQUFDO1lBQ3pELFFBQVEsRUFBRSxpQ0FBZ0IsQ0FBQyxLQUFLLENBQUMscUJBQVMsQ0FBQyxXQUFXLENBQUM7U0FDMUQsQ0FBQyxDQUFDO1FBRUgsVUFBVSxDQUFDLG1CQUFtQixDQUFDLGlDQUFlLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUN2RSxVQUFVLENBQUMsbUJBQW1CLENBQUMsaUNBQWUsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1FBQ3pFLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxpQ0FBZSxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFFckUsVUFBVSxDQUFDLGtCQUFrQixDQUFDLDJEQUE0QixDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ3ZFLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyx1Q0FBa0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUM3RCxVQUFVLENBQUMsa0JBQWtCLENBQUMsaURBQXVCLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDbEUsVUFBVSxDQUFDLGtCQUFrQixDQUFDLGlEQUF1QixDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQ2xFLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyx5REFBMkIsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUN0RSxVQUFVLENBQUMsa0JBQWtCLENBQUMseURBQTJCLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDdEUsVUFBVSxDQUFDLGtCQUFrQixDQUFDLG1DQUFnQixDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzNELFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyx1Q0FBa0IsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUM3RCxVQUFVLENBQUMsa0JBQWtCLENBQUMsbUNBQWdCLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDM0QsVUFBVSxDQUFDLGtCQUFrQixDQUFDLDZEQUE2QixDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRXhFLE9BQU8sVUFBVSxDQUFDO0lBQ3RCLENBQUM7Q0FDSjtBQTFCRCxnQ0EwQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2RrID0gcmVxdWlyZSgnQGF3cy1jZGsvY2RrJyk7XG5pbXBvcnQge1JvbGUsIFNlcnZpY2VQcmluY2lwYWx9IGZyb20gXCJAYXdzLWNkay9hd3MtaWFtXCI7XG5pbXBvcnQge0Nsb3VkV2F0Y2hCYXNpY0xvZ2dpbmdQb2xpY3l9IGZyb20gXCIuLi9wb2xpY2llcy9jbG91ZC13YXRjaC9DbG91ZFdhdGNoQmFzaWNMb2dnaW5nUG9saWN5XCI7XG5pbXBvcnQge1Jlc291cmNlc30gZnJvbSBcIi4uL21vZGVsL1Jlc291cmNlc1wiO1xuaW1wb3J0IHtMYW1iZGFJbnZva2VQb2xpY3l9IGZyb20gXCIuLi9wb2xpY2llcy9sYW1iZGEvTGFtYmRhSW52b2tlUG9saWN5XCI7XG5pbXBvcnQge1Nxc1JlY2VpdmVNZXNzYWdlUG9saWN5fSBmcm9tIFwiLi4vcG9saWNpZXMvc3FzL1Nxc1JlY2VpdmVNZXNzYWdlUG9saWN5XCI7XG5pbXBvcnQge1Nxc1Byb2R1Y2VNZXNzYWdlUG9saWN5fSBmcm9tIFwiLi4vcG9saWNpZXMvc3FzL1Nxc1Byb2R1Y2VNZXNzYWdlUG9saWN5XCI7XG5pbXBvcnQge0tpbmVzaXNQcm9kdWNlTWVzc2FnZVBvbGljeX0gZnJvbSBcIi4uL3BvbGljaWVzL2tpbmVzaXMvS2luZXNpc1Byb2R1Y2VNZXNzYWdlUG9saWN5XCI7XG5pbXBvcnQge0tpbmVzaXNSZWNlaXZlTWVzc2FnZVBvbGljeX0gZnJvbSBcIi4uL3BvbGljaWVzL2tpbmVzaXMvS2luZXNpc1JlY2VpdmVNZXNzYWdlUG9saWN5XCI7XG5pbXBvcnQge1Nuc1B1Ymxpc2hQb2xpY3l9IGZyb20gXCIuLi9wb2xpY2llcy9zbnMvU25zUHVibGlzaFBvbGljeVwiO1xuaW1wb3J0IHtTM09iamVjdENSVURQb2xpY3l9IGZyb20gXCIuLi9wb2xpY2llcy9zMy9TM09iamVjdENSVURQb2xpY3lcIjtcbmltcG9ydCB7S21zRGVjcnlwdFBvbGljeX0gZnJvbSBcIi4uL3BvbGljaWVzL2ttcy9LbXNEZWNyeXB0UG9saWN5XCI7XG5pbXBvcnQge1NlY3JldHNNYW5hZ2VyUmVhZFZhbHVlUG9saWN5fSBmcm9tIFwiLi4vcG9saWNpZXMvc2VjcmV0LW1hbmFnZXIvU2VjcmV0c01hbmFnZXJSZWFkVmFsdWVQb2xpY3lcIjtcbmltcG9ydCB7TWFuYWdlZFBvbGljaWVzfSBmcm9tIFwiLi4vcG9saWNpZXMvTWFuYWdlZFBvbGljaWVzXCI7XG5pbXBvcnQge1NlcnZpY2VQcmluY2lwYWxzfSBmcm9tIFwiLi9TZXJ2aWNlUHJpbmNpcGFsc1wiO1xuaW1wb3J0IHtOYW1pbmdDb252ZW50aW9ufSBmcm9tIFwiQG1vbnNhbnRvaXQvdmNpcy1jZGstdXRpbHNcIjtcblxuXG5leHBvcnQgY2xhc3MgTGFtYmRhUm9sZSB7XG5cbiAgICBzdGF0aWMgY3JlYXRlKHN0YWNrOiBjZGsuU3RhY2spOiBSb2xlIHtcblxuICAgICAgICBjb25zdCBsYW1iZGFSb2xlID0gbmV3IFJvbGUoc3RhY2ssIFJlc291cmNlcy5MQU1CREFfUk9MRSwge1xuICAgICAgICAgICAgYXNzdW1lZEJ5OiBuZXcgU2VydmljZVByaW5jaXBhbChTZXJ2aWNlUHJpbmNpcGFscy5MQU1CREEpLFxuICAgICAgICAgICAgcm9sZU5hbWU6IE5hbWluZ0NvbnZlbnRpb24uYXBwbHkoUmVzb3VyY2VzLkxBTUJEQV9ST0xFKVxuICAgICAgICB9KTtcblxuICAgICAgICBsYW1iZGFSb2xlLmF0dGFjaE1hbmFnZWRQb2xpY3koTWFuYWdlZFBvbGljaWVzLlhSQVlfV1JJVEVfT05MWV9BQ0NFU1MpO1xuICAgICAgICBsYW1iZGFSb2xlLmF0dGFjaE1hbmFnZWRQb2xpY3koTWFuYWdlZFBvbGljaWVzLkFQSUdXX0lOVk9LRV9GVUxMX0FDQ0VTUyk7XG4gICAgICAgIGxhbWJkYVJvbGUuYXR0YWNoTWFuYWdlZFBvbGljeShNYW5hZ2VkUG9saWNpZXMuTEFNQkRBX1ZQQ19FWEVDVVRJT04pO1xuXG4gICAgICAgIGxhbWJkYVJvbGUuYXR0YWNoSW5saW5lUG9saWN5KENsb3VkV2F0Y2hCYXNpY0xvZ2dpbmdQb2xpY3kuZ2V0KHN0YWNrKSk7XG4gICAgICAgIGxhbWJkYVJvbGUuYXR0YWNoSW5saW5lUG9saWN5KExhbWJkYUludm9rZVBvbGljeS5nZXQoc3RhY2spKTtcbiAgICAgICAgbGFtYmRhUm9sZS5hdHRhY2hJbmxpbmVQb2xpY3koU3FzUmVjZWl2ZU1lc3NhZ2VQb2xpY3kuZ2V0KHN0YWNrKSk7XG4gICAgICAgIGxhbWJkYVJvbGUuYXR0YWNoSW5saW5lUG9saWN5KFNxc1Byb2R1Y2VNZXNzYWdlUG9saWN5LmdldChzdGFjaykpO1xuICAgICAgICBsYW1iZGFSb2xlLmF0dGFjaElubGluZVBvbGljeShLaW5lc2lzUHJvZHVjZU1lc3NhZ2VQb2xpY3kuZ2V0KHN0YWNrKSk7XG4gICAgICAgIGxhbWJkYVJvbGUuYXR0YWNoSW5saW5lUG9saWN5KEtpbmVzaXNSZWNlaXZlTWVzc2FnZVBvbGljeS5nZXQoc3RhY2spKTtcbiAgICAgICAgbGFtYmRhUm9sZS5hdHRhY2hJbmxpbmVQb2xpY3koU25zUHVibGlzaFBvbGljeS5nZXQoc3RhY2spKTtcbiAgICAgICAgbGFtYmRhUm9sZS5hdHRhY2hJbmxpbmVQb2xpY3koUzNPYmplY3RDUlVEUG9saWN5LmdldChzdGFjaykpO1xuICAgICAgICBsYW1iZGFSb2xlLmF0dGFjaElubGluZVBvbGljeShLbXNEZWNyeXB0UG9saWN5LmdldChzdGFjaykpO1xuICAgICAgICBsYW1iZGFSb2xlLmF0dGFjaElubGluZVBvbGljeShTZWNyZXRzTWFuYWdlclJlYWRWYWx1ZVBvbGljeS5nZXQoc3RhY2spKTtcblxuICAgICAgICByZXR1cm4gbGFtYmRhUm9sZTtcbiAgICB9XG59XG4iXX0=