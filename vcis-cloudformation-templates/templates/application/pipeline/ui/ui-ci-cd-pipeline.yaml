AWSTemplateFormatVersion: "2010-09-09"
Description: Automate provisioning of CodeBuild with CodePipeline
Transform: [VcisCommonTagsMacro]
Parameters:
  Env:
    Description: 'Environment in which resources should be deployed'
    Type: String
    AllowedValues:
      - dev
      - it
      - prod
    ConstraintDescription: Must be either dev, it or prod

  BuildProfile:
    Description: 'Profile to be used while building the ui. By default, it will use the same as in Env'
    Type: String
    Default: ''
    
  ProjectModuleTag:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Environment specific SSM Param Name for Project Module Tag
    AllowedValues:
        - /vcis/dev/infra/tags/project-module-pod
        - /vcis/dev/infra/tags/project-module-sales
        - /vcis/dev/infra/tags/project-module-multiplication
        - /vcis/dev/infra/tags/project-module-legally-saved-seeds
        - /vcis/dev/infra/tags/project-module-master-data
        - /vcis/it/infra/tags/project-module-pod
        - /vcis/it/infra/tags/project-module-sales
        - /vcis/it/infra/tags/project-module-multiplication
        - /vcis/it/infra/tags/project-module-legally-saved-seeds
        - /vcis/it/infra/tags/project-module-master-data
        - /vcis/prod/infra/tags/project-module-pod
        - /vcis/prod/infra/tags/project-module-sales
        - /vcis/prod/infra/tags/project-module-multiplication
        - /vcis/prod/infra/tags/project-module-legally-saved-seeds
        - /vcis/prod/infra/tags/project-module-master-data

  CustomTags:
    Type: String
    Description: "Coma-separated list of additional tags (like feature name and team name) to be applied on template resources. e.g. Key=mon:feature,Value=entered-area,Key=mon:team,Value=blackfyre"
    Default: ''

  #CloudfrontDistributionId:
  CloudFrontDistributionStackName:
    Type: String
    Description: Cfn Stack name with CloudFront distribution that will need a cache invalidation after deploying
    
  #BuildInputName:
  S3SourceKey:
    Description: "S3 Source Object Name triggering this Pipeline. e.g. 'pod-bulk-upload-api-dev'"
    Type: String

  WorkloadName:
    Description: "Template Stack Name to be created by this Pipeline e.g. 'vcis-app-bulk-upload-api'"
    Type: String

  AppAccountLevelResourcesStackName:
    Description: >-
      Stack name exporting Application Resources like Log Group. e.g. 'vcis-app-non-prod-account-level-resources' (non-prod), 'vcis-app-prod-account-level-resources' (prod)
    Type: String
  
  ApprovalNotificationsStackName:
    Description: >-
      Stack name exporting release approval notification SNS topic ARN (Applicable only for Prod Env) e.g. 'vcis-prod-app-approvals-slack-notifier'
    Type: String

  ComputeTypeName:
    Type: String
    Description: CodeBuild specific Compute type
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
    Default: 'BUILD_GENERAL1_SMALL'

Conditions:
  IsProd: !Equals [ !Ref Env, "prod" ]
  HasBuildProfile: !Not [!Equals [ !Ref BuildProfile , ""]]

Resources:
  
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location:
          Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-ArtifactBucket"
      Stages:
        - Name: SourceStep
          Actions: 
            - Name: source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: S3
              Configuration:
                S3Bucket:
                  Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-SourceBucket"
                S3ObjectKey: !Ref S3SourceKey
              OutputArtifacts:
                - Name: SourceArtifacts
              RunOrder: 1

        - Name: BuildStep
          Actions:
            - Name: build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: BuildOutput
              Configuration: 
                ProjectName: !Ref CodeBuild
              RunOrder: 1
                
        - !If
          - IsProd
          - Name: ApproveProdDeploy
            Actions:
              - Name: ApproveProdDeploy
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: '1'
                Configuration:
                  NotificationArn:
                    Fn::ImportValue: !Sub "${ApprovalNotificationsStackName}-SNSTopicArn"
                  CustomData: !Sub 'A new change set was created for the ${WorkloadName}-${Env} stack. Do you want to push to production?'
                RunOrder: 1
          - !Ref AWS::NoValue

        - Name: DeployStage
          Actions:
            - Name: deploy
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName:
                  Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-WebPagesBucket"
                Extract: true
                ObjectKey: !If [IsProd, !Sub '${WorkloadName}', !Sub "${Env}/${WorkloadName}"]

  CodePipelinePolicy: 
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      Description: "Policy for the Codepipeline"
      Path: "/"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
            Resource:
              - !Join
                - ""
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-ArtifactBucket"
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-ArtifactBucket"
                  - '/*'     
              - !Join
                - ""
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-WebPagesBucket"
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-WebPagesBucket"
                  - '/*'  
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              - !Join
                - ""
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-SourceBucket"
              - !Join
                - ""
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-SourceBucket"
                  - '/*'
          - Effect: Allow
            Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Resource: !GetAtt CodeBuild.Arn
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: '*'
                        
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
      ManagedPolicyArns:
        - !Ref CodePipelinePolicy
            
  CodeBuild:
    Type: AWS::CodeBuild::Project
    DependsOn:
      - CodeBuildServiceRole
    Properties:
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Environment:
        ComputeType: !Ref ComputeTypeName
        Image: aws/codebuild/standard:2.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: CLOUDFRONT_DISTRIBUTION_ID
            Type: PLAINTEXT
            Value:
              Fn::ImportValue: !Sub "${CloudFrontDistributionStackName}-CloudFrontDistributionId"
          - Name: ENV
            Type: PLAINTEXT
            Value: !If
                - HasBuildProfile
                - !Ref BuildProfile
                - !Ref Env
      ServiceRole: !Ref 'CodeBuildServiceRole'
                     
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref CodeBuildPolicy
                
  CodeBuildPolicy: 
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      Description: "Policy for access to logs and S3 Buckets"
      Path: "/"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
            Resource: 
              - !Join
                - ""
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-ArtifactBucket"
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-ArtifactBucket"
                  - '/*'     
              - !Join
                - ""
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-WebPagesBucket"
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-WebPagesBucket"
                  - '/*'  
          - Effect: Allow
            Action: logs:*
            Resource: '*'
          - Effect: Allow
            Action:
              - cloudfront:CreateInvalidation
            Resource:
              - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/*'
          - Effect: "Allow"
            Action:
              - ssm:GetParameter*
              - ssm:DescribeParameters
            Resource: !Sub "arn:aws:ssm:*:${AWS::AccountId}:parameter/vcis/*"
            
  AmazonCloudWatchEventRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action: sts:AssumeRole
        Path: /
        Policies:
          -
            PolicyName: cwe-pipeline-execution
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                -
                  Effect: Allow
                  Action: codepipeline:StartPipelineExecution
                  Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodePipeline ] ]

  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - 'AWS API Call via CloudTrail'
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - CopyObject
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - Fn::ImportValue: !Sub "${AppAccountLevelResourcesStackName}-SourceBucket"
            key:
              - !Ref S3SourceKey
      Targets:
        -
          Arn:
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodePipeline ] ]
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: codepipeline-AppPipeline

Outputs:
  PipelineUrl:
    Description: 'UI CI/CD CodePipeline'
    Value:  !Join ["", [!Sub 'https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/', !Ref CodePipeline] ]