"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cloudformation_generated_1 = require("@aws-cdk/aws-cloudformation/lib/cloudformation.generated");
class AmiLookupCustomResource extends cloudformation_generated_1.CfnCustomResource {
    constructor(scope, id, props) {
        super(scope, id, {
            serviceToken: props.serviceToken
        });
        this.userProperties = {
            AmiNamePrefix: props.amiNamePrefix,
            Region: props.region
        };
    }
    /**
     * Override renderProperties to mix in the user-defined properties
     */
    renderProperties(properties) {
        const props = super.renderProperties(properties);
        return Object.assign(props, this.userProperties || {});
    }
}
exports.AmiLookupCustomResource = AmiLookupCustomResource;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1pbG9va3VwLWN1c3RvbS1yZXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImFtaWxvb2t1cC1jdXN0b20tcmVzb3VyY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSx1R0FBNkY7QUFjN0YsTUFBYSx1QkFBd0IsU0FBUSw0Q0FBaUI7SUFHMUQsWUFBWSxLQUFvQixFQUFFLEVBQVUsRUFBRSxLQUFtQztRQUM3RSxLQUFLLENBQUMsS0FBSyxFQUFFLEVBQUUsRUFBRTtZQUNiLFlBQVksRUFBRSxLQUFLLENBQUMsWUFBWTtTQUNuQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsY0FBYyxHQUFHO1lBQ2xCLGFBQWEsRUFBRSxLQUFLLENBQUMsYUFBYTtZQUNsQyxNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU07U0FDdkIsQ0FBQztJQUNOLENBQUM7SUFFRDs7T0FFRztJQUNPLGdCQUFnQixDQUFDLFVBQWU7UUFDdEMsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2pELE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLGNBQWMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUMzRCxDQUFDO0NBQ0o7QUFyQkQsMERBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNkayA9IHJlcXVpcmUoJ0Bhd3MtY2RrL2NkaycpO1xuaW1wb3J0IHsgQ2ZuQ3VzdG9tUmVzb3VyY2UgfSBmcm9tICdAYXdzLWNkay9hd3MtY2xvdWRmb3JtYXRpb24vbGliL2Nsb3VkZm9ybWF0aW9uLmdlbmVyYXRlZCc7XG5cblxudHlwZSBQcm9wZXJ0aWVzID0geyBba2V5OiBzdHJpbmddOiBhbnkgfTtcblxuLyoqXG4gKiBQcm9wZXJ0aWVzIHRvIHByb3ZpZGUgYSBMYW1iZGEtYmFja2VkIEFtaSBMb29rdXAgY3VzdG9tIHJlc291cmNlXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQW1pTG9va3VwQ3VzdG9tUmVzb3VyY2VQcm9wcyB7XG4gICAgc2VydmljZVRva2VuOiBzdHJpbmc7XG4gICAgYW1pTmFtZVByZWZpeDogc3RyaW5nO1xuICAgIHJlZ2lvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgQW1pTG9va3VwQ3VzdG9tUmVzb3VyY2UgZXh0ZW5kcyBDZm5DdXN0b21SZXNvdXJjZSB7XG4gICAgcHJpdmF0ZSByZWFkb25seSB1c2VyUHJvcGVydGllcz86IFByb3BlcnRpZXM7XG5cbiAgICBjb25zdHJ1Y3RvcihzY29wZTogY2RrLkNvbnN0cnVjdCwgaWQ6IHN0cmluZywgcHJvcHM6IEFtaUxvb2t1cEN1c3RvbVJlc291cmNlUHJvcHMpIHtcbiAgICAgICAgc3VwZXIoc2NvcGUsIGlkLCB7XG4gICAgICAgICAgICBzZXJ2aWNlVG9rZW46IHByb3BzLnNlcnZpY2VUb2tlblxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnVzZXJQcm9wZXJ0aWVzID0ge1xuICAgICAgICAgICAgQW1pTmFtZVByZWZpeDogcHJvcHMuYW1pTmFtZVByZWZpeCxcbiAgICAgICAgICAgIFJlZ2lvbjogcHJvcHMucmVnaW9uXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGUgcmVuZGVyUHJvcGVydGllcyB0byBtaXggaW4gdGhlIHVzZXItZGVmaW5lZCBwcm9wZXJ0aWVzXG4gICAgICovXG4gICAgcHJvdGVjdGVkIHJlbmRlclByb3BlcnRpZXMocHJvcGVydGllczogYW55KTogeyBba2V5OiBzdHJpbmddOiBhbnkgfSB7XG4gICAgICAgIGNvbnN0IHByb3BzID0gc3VwZXIucmVuZGVyUHJvcGVydGllcyhwcm9wZXJ0aWVzKTtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ocHJvcHMsIHRoaXMudXNlclByb3BlcnRpZXMgfHwge30pO1xuICAgIH1cbn0iXX0=